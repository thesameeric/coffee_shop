org: thesameeric
app: sguru
service: apis

plugins:
  - serverless-dynamodb
  - serverless-offline
custom:
  serverless-dynamo:
    stages:
      - dev
    start:
      port: 8000
      docker: false
      inMemory: true
      migrate: true
      region: localhost
  dev:
    logLevel: DEBUG
  prod:
    logLevel: INFO

provider:
  name: aws
  runtime: nodejs20.x
  region: us-east-1
  stage: ${opt:stage, 'dev'}
  environment:
    DYNAMODB_TABLE: coffee-shop
    IS_OFFLINE: ${opt:stage, 'dev'} == 'dev'
  apiGateway:
    minimumCompressionSize: 1024
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:*
          Resource: "*"
package:
  individually: true
  excludeDevDependencies: true

functions:
  create:
    handler: src/handlers/createOrder.handler
    events:
      - http:
          path: items
          method: post
          cors: true
  getAll:
    handler: src/handlers/getOrders.handler
    events:
      - http:
          path: items
          method: get
          cors: true
  getOne:
    handler: src/handlers/getOrder.handler
    events:
      - http:
          path: items/{id}
          method: get
          cors: true
  update:
    handler: src/handlers/updateOrder.handler
    events:
      - http:
          path: items/{id}
          method: put
          cors: true
  delete:
    handler: src/handlers/deleteOrder.handler
    events:
      - http:
          path: items/{id}
          method: delete
          cors: true

resources:
  Resources:
    ItemsTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        TableName: coffee-shop
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
